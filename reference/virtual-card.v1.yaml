openapi: 3.1.0
info:
  title: virtual-card
  version: '1.0'
  summary: Portal Backend REST API for virtual-card module
servers:
  - url: 'http://localhost:3000'
paths:
  '/api/portal/virtualCard/v1/tenants/{tenant}/users/{upn}/cards':
    parameters:
      - schema:
          type: string
        name: tenant
        in: path
        required: true
      - schema:
          type: string
        name: upn
        in: path
        required: true
    get:
      summary: Virtual cards
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/jsend/successResponse.v1.yaml
                  - type: object
                    properties:
                      data:
                        type: object
                        required:
                          - cards
                        properties:
                          cards:
                            type: array
                            description: Empty if user has no card
                            items:
                              $ref: '#/components/schemas/VirtualCardInfo'
                    required:
                      - data
      operationId: get-api-portal-virtualCard-v1-tenants-tenant-users-upn-cards
      description: '{tenant} is value of tenantName from accountPermissions and {upn} is value of userPrincipalName from accountPermissions'
    post:
      summary: Create virtual card
      operationId: post-api-portal-virtualCard-v1-tenants-tenant-users-upn-cards
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/jsend/successResponse.v1.yaml
                  - type: object
                    properties:
                      data:
                        type: object
                    required:
                      - data
  '/api/portal/virtualCard/v1/tenants/{tenant}/users/{upn}/cards/{cardId}':
    parameters:
      - schema:
          type: string
        name: tenant
        in: path
        required: true
      - schema:
          type: string
        name: upn
        in: path
        required: true
      - schema:
          type: string
        name: cardId
        in: path
        required: true
    delete:
      summary: Delete virtual card
      operationId: delete-api-portal-virtualCard-v1-tenants-tenant-users-upn-cards-cardId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/jsend/successResponse.v1.yaml
                  - type: object
                    properties:
                      data:
                        type: object
                    required:
                      - data
  /api/portal/virtualCard/v1/certificateTemplates:
    get:
      summary: Templates for certificates
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/jsend/successResponse.v1.yaml
                  - type: object
                    properties:
                      data:
                        type: object
                        required:
                          - templates
                        properties:
                          templates:
                            type: array
                            items:
                              $ref: '#/components/schemas/Template'
                    required:
                      - data
      operationId: get-api-portal-virtualCard-v1-template
    parameters: []
  /api/portal/virtualCard/v1/card/certificates/generate:
    parameters: []
    post:
      summary: Generate certificate by template
      operationId: post-api-portal-virtualCard-v1-card-cardNumber-certificate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/jsend/successResponse.v1.yaml
                  - type: object
                    properties:
                      data:
                        type: object
                    required:
                      - data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                templateId:
                  type: integer
  /api/portal/virtualCard/v1/card/certificates/import:
    post:
      summary: Import certificate
      operationId: post-api-portal-virtualCard-v1-card-certificates-import
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/jsend/successResponse.v1.yaml
                  - type: object
                    properties:
                      data:
                        type: object
                    required:
                      - data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rawData:
                  type: string
  '/api/portal/virtualCard/v1/card/certificates/{certificateId}':
    delete:
      summary: Delete certificate
      operationId: delete-api-portal-virtualCard-v1-certificate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/jsend/successResponse.v1.yaml
                  - type: object
                    properties:
                      data:
                        type: object
                    required:
                      - data
      parameters: []
    parameters:
      - schema:
          type: string
        name: certificateId
        in: path
        required: true
components:
  schemas:
    VirtualCardInfo:
      title: VirtualCardInfo
      type: object
      description: ''
      examples: []
      properties:
        serialNumber:
          type: string
          description: Unique identifier for the given user.
        validFrom:
          type: string
        validTo:
          type: string
        certificates:
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
      required:
        - serialNumber
        - validFrom
        - validTo
        - certificates
    Certificate:
      title: Certificate
      type: object
      properties:
        certificateId:
          type: integer
        serialNumber:
          type: string
        templateId?:
          type:
            - 'null'
            - integer
        notBefore:
          type: string
          description: ISO 8601 formát?
        notAfter:
          type: string
          description: ISO 8601 formát?
        state:
          type: string
          enum:
            - valid
            - invalid
        issuer:
          type: string
        subject:
          type: string
        keyUsage:
          type: array
          items:
            type: string
        alternativeNames:
          type: array
          items:
            type: string
        hash:
          type: string
        rawData:
          type: string
          description: Pole bytu pro export certifikátu
      required:
        - certificateId
        - serialNumber
        - templateId?
        - notBefore
        - notAfter
        - state
        - issuer
        - subject
        - keyUsage
        - alternativeNames
        - hash
        - rawData
    Template:
      title: TemplateResponse
      type: object
      properties:
        templateId:
          type: string
        name:
          type: string
        icon:
          type: string
        autorenew:
          type: boolean
          description: auto obnova
        autoenroll:
          type: boolean
          description: |
            Vygenerovat se zalozením karty
      required:
        - templateId
        - name
        - icon
        - autorenew
        - autoenroll

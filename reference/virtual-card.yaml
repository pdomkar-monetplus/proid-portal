openapi: 3.1.0
info:
  title: virtual-card
  version: '1.0'
  summary: Portal Backend REST API for virtual-card module
servers:
  - url: 'http://localhost:3000'
paths:
  /api/portal/virtualCard/v1/card:
    parameters: []
    get:
      summary: Virtual card info
      operationId: get-api-portal-virtualCard-v1-info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: ./mobile.yaml#/components/schemas/ResponseStatus
                  code:
                    type: string
                  data:
                    oneOf:
                      - $ref: '#/components/schemas/VirtualCardInfoResponse'
                      - type: 'null'
                        properties: {}
    delete:
      summary: Delete virtual card
      operationId: delete-api-portal-virtualCard-v1-card
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteVirtualCardResponse'
      deprecated: true
    post:
      summary: Create virtual card
      operationId: post-api-portal-virtualCard-v1-card
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVirtualCardRespone'
  /api/portal/virtualCard/v1/create:
    post:
      summary: Create virtual card
      operationId: post-api-portal-virtualCard-v1-create
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVirtualCardRespone'
      deprecated: true
      x-internal: false
  '/api/portal/virtualCard/v1/card/{cardNumber}':
    parameters:
      - schema:
          type: string
        name: cardNumber
        in: path
        required: true
    delete:
      summary: Delete virtual card
      operationId: delete-api-portal-virtualCard-v1-card-cardNumber
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteVirtualCardResponse'
  '/api/portal/virtualCard/v1/card/{cardNumber}/templates':
    get:
      summary: Templates
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: ./mobile.yaml#/components/schemas/ResponseStatus
                  code:
                    type: string
                  data:
                    $ref: '#/components/schemas/TemplateResponse'
      operationId: get-api-portal-virtualCard-v1-template
    parameters:
      - schema:
          type: string
        name: cardNumber
        in: path
        required: true
  '/api/portal/virtualCard/v1/card/{cardNumber}/templates/{templateIdentificator}/generate':
    post:
      summary: Generate certificate by template
      operationId: post-api-portal-virtualCard-v1-certificate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCertificateResponse'
    parameters:
      - schema:
          type: string
        name: cardNumber
        in: path
        required: true
      - schema:
          type: string
        name: templateIdentificator
        in: path
        required: true
  '/api/portal/virtualCard/v1/card/{cardNumber}/certificate/{certificateId}':
    delete:
      summary: Delete certificate
      operationId: delete-api-portal-virtualCard-v1-certificate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCertificateResponse'
      parameters: []
    parameters:
      - schema:
          type: string
        name: certificateId
        in: path
        required: true
      - schema:
          type: string
        name: cardNumber
        in: path
        required: true
components:
  schemas:
    VirtualCardInfoResponse:
      title: VirtualCardInfoResponse
      type: object
      description: ''
      examples: []
      properties:
        cardNumber:
          type: string
          description: Unique identifier for the given user.
        created:
          type: string
        certificates:
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
      required:
        - cardNumber
        - created
        - certificates
    Certificate:
      title: Certificate
      type: object
      properties:
        serialNumber:
          type: string
        notBefore:
          type: string
          description: ISO 8601 formát?
        notAfter:
          type: string
          description: ISO 8601 formát?
        autoExtend:
          type: boolean
        tempateIdentificator?:
          type:
            - string
            - 'null'
        state:
          type: string
          enum:
            - VALID
        publisher:
          type: string
        receiver:
          type: string
        alternativeName:
          type: string
        signature:
          type: string
        purposes:
          type: array
          items:
            type: string
      required:
        - serialNumber
        - notBefore
        - notAfter
        - autoExtend
        - state
    TemplateResponse:
      title: TemplateResponse
      type: object
      properties:
        identificator?:
          type: string
        name:
          type: string
        icon:
          type: string
        multiple:
          type: boolean
          description: |
            Support more then one certificate of this purpose or should be number - how many can be?
      required:
        - identificator?
        - name
        - multiple
    DeleteCertificateResponse:
      title: DeleteCertificateResponse
      type: object
      properties:
        status:
          $ref: ./mobile.yaml#/components/schemas/ResponseStatus
        code:
          type:
            - integer
            - 'null'
    CreateVirtualCardRespone:
      title: CreateVirtualCardRespones
      type: object
      properties:
        status:
          $ref: ./mobile.yaml#/components/schemas/ResponseStatus
        code:
          type:
            - integer
            - 'null'
    CreateCertificateResponse:
      title: CreateCertificateResponse
      type: object
      properties:
        status:
          $ref: ./mobile.yaml#/components/schemas/ResponseStatus
        code:
          type:
            - integer
            - 'null'
    DeleteVirtualCardResponse:
      title: DeleteVirtualCardResponse
      type: object
      properties:
        status:
          $ref: ./mobile.yaml#/components/schemas/ResponseStatus
        code:
          type:
            - integer
            - 'null'
